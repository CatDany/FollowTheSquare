package dany.fts;

import dany.fts.configuration.Configuration;
import dany.fts.launch.Start;

public class Game implements Runnable
{
	private boolean isRunning;
	private long prevSecMillis;
	private int fps;
	
	public Configuration configuration;
	
	private Window frame;
	
	public Game(String[] args)
	{
		this.frame = new Window();
		this.configuration = new Configuration();
		
		configuration.parseConfiguration(args);
		
		run();
	}
	
	@Override
	public void run()
	{
		Instances.logger.info("Starting the game..");
		this.isRunning = true;
		this.prevSecMillis = System.currentTimeMillis();
		
		while (isRunning)
		{
			fps++;
			if (prevSecMillis + 1000 >= System.currentTimeMillis())
			{
				prevSecMillis = System.currentTimeMillis();
				fps = 0;
			}
			try
			{
				Thread.sleep(1000 / configuration.getInteger("maxfps"));
			}
			catch (InterruptedException t)
			{
				Instances.logger.error("Unable to keep FPS in bounds (%s). Thread was interrupted.", configuration.getInteger("maxfps"));
			}
		}
		Instances.logger.info("Game stopped.");
		System.exit(0);
	}
	
	/**
	 * Stop the game
	 */
	public void stop()
	{
		Instances.logger.warn("Stopping the game..");
		this.isRunning = false;
	}
	
	public String fps()
	{
		return String.valueOf(fps);
	}
	
	/**
	 * Return a main frame of the game
	 * @return
	 */
	public Window frame()
	{
		return frame;
	}
	
	/**
	 * Return an instance of the game
	 * @return
	 */
	public static Game instance()
	{
		return Start.getGameInstance();
	}
}