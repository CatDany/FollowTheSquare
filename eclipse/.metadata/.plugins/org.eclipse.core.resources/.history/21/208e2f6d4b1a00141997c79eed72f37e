package dany.fts.logging;

import java.io.File;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;

import dany.fts.Refs;
import dany.fts.misc.DateHelper;

public class SimpleLogger
{
	private final Logger loggingTool;
	
	public SimpleLogger(String logFolder)
	{
		this.loggingTool = Logger.getLogger(Refs.ID);
		loggingTool.setUseParentHandlers(false);
		File logFile = new File(logFolder + DateHelper.getFormatedDate("yyyy-MM-dd-hh-mm-ss") + ".log");
		if (!logFile.exists())
		{
			try
			{
				new File(logFilename.substring(0, logFilename.lastIndexOf("/"))).mkdirs();
				logFile.createNewFile();
			}
			catch (Throwable t)
			{
				t.printStackTrace();
			}
		}
		try
		{
			FileHandler fh = new FileHandler(logFilename);
			loggingTool.addHandler(fh);
		}
		catch (Throwable t)
		{
			t.printStackTrace();
		}
		
		info("Logger initialized successfully.");
	}
	
	public void info(String message, Object... format)
	{
		loggingTool.log(Level.INFO, String.format(message, format));
	}
	
	public void warn(String message, Object... format)
	{
		loggingTool.log(Level.WARNING, String.format(message, format));
	}
	
	public void error(String message, Object... format)
	{
		loggingTool.log(Level.SEVERE, String.format(message, format));
	}
	
	public void catching(Throwable t, String message, Object... format)
	{
		loggingTool.log(Level.INFO, String.format(message, format), t);
	}
	
	public void fine(String message, Object... format)
	{
		loggingTool.log(Level.FINE, String.format(message, format));
	}
}
